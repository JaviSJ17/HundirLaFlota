/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hundirLaFlota;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author Javie
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
        cargarMiTablero();
        cargarSuTablero();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jpn_miTablero = new javax.swing.JPanel();
        jpn_suTablero = new javax.swing.JPanel();
        jpn_barraArriba = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jpn_miTablero.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jpn_miTablero.setPreferredSize(new java.awt.Dimension(541, 4));
        jpn_miTablero.setLayout(new java.awt.GridLayout(10, 10));

        jpn_suTablero.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jpn_suTablero.setPreferredSize(new java.awt.Dimension(541, 4));
        jpn_suTablero.setLayout(new java.awt.GridLayout(10, 10));

        jpn_barraArriba.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jpn_barraArribaLayout = new javax.swing.GroupLayout(jpn_barraArriba);
        jpn_barraArriba.setLayout(jpn_barraArribaLayout);
        jpn_barraArribaLayout.setHorizontalGroup(
            jpn_barraArribaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jpn_barraArribaLayout.setVerticalGroup(
            jpn_barraArribaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Mi tablero");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Tablero del rival");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jpn_barraArriba, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jpn_miTablero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jpn_suTablero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpn_barraArriba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jpn_miTablero, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
                    .addComponent(jpn_suTablero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jpn_barraArriba;
    private javax.swing.JPanel jpn_miTablero;
    private javax.swing.JPanel jpn_suTablero;
    // End of variables declaration//GEN-END:variables

    private void cargarMiTablero() {
        GridLayout gridLayout = (GridLayout) jpn_miTablero.getLayout();
        for (int fila = 0; fila < gridLayout.getRows(); fila++) {
            for (int columna = 0; columna < gridLayout.getColumns(); columna++) {
                if (fila == 0 && columna == 0) {
                    // esquina arriba izquierda
                    JPanel panel = new JPanel();
                    panel.setName(fila + "-" + columna);
//                    panel.setBackground(Color.LIGHT_GRAY);
//                    panel.setBorder(BorderFactory.createLineBorder(Color.black, 1));
                    jpn_miTablero.add(panel);
                } else if (fila == 0 && columna > 0) {
                    //Linea de arriba (horizontal)
                    JLabel label = new JLabel(obtenerLetraHorizontal(columna));
                    label.setHorizontalAlignment(0);
                    label.setFont(new Font("fuente", 0, 35));
                    jpn_miTablero.add(label);
                } else if (fila > 0 && columna == 0) {
                    // linea vertical
                    JLabel label = new JLabel(obtenerNumeroVertial(fila));
                    label.setHorizontalAlignment(0);
                    label.setFont(new Font("fuente", 0, 35));
                    jpn_miTablero.add(label);
                } else {
                    JPanel panel = new JPanel();
                    panel.setName(fila + "-" + columna);
                    panel.setBackground(Color.LIGHT_GRAY);
                    panel.setBorder(BorderFactory.createLineBorder(Color.black, 1));
                    panel.addMouseListener(new MouseListener() {
                        @Override
                        public void mouseClicked(MouseEvent e) {
                            Component comp = e.getComponent();
                            if (comp instanceof JPanel) {
                                JPanel panelPulsado = (JPanel) comp;
                                panelPulsado.setBackground(Color.darkGray);
                                String nombreComp = panelPulsado.getName();
                                String[] partes = nombreComp.split("-");
                                int fila = Integer.parseInt(partes[0]);
                                int columna = Integer.parseInt(partes[1]);
                                System.out.println("Click en mi tablero en Fila " + fila + " columna " + columna);
//                            jpn_miTablero.get
//                            jpn_miTablero.remove(comp);

                            }
                        }

                        @Override
                        public void mousePressed(MouseEvent e) {
//                        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
                        }

                        @Override
                        public void mouseReleased(MouseEvent e) {
//                        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
                        }

                        @Override
                        public void mouseEntered(MouseEvent e) {
//                        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
                        }

                        @Override
                        public void mouseExited(MouseEvent e) {
//                        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
                        }
                    });
                    jpn_miTablero.add(panel);
                }

            }
//        gridLayout.
            jpn_miTablero.revalidate();
            jpn_miTablero.repaint();
        }
    }

    private void cargarSuTablero() {
        GridLayout gridLayout = (GridLayout) jpn_suTablero.getLayout();
        for (int fila = 0; fila < gridLayout.getRows(); fila++) {
            for (int columna = 0; columna < gridLayout.getColumns(); columna++) {
                if (fila == 0 && columna == 0) {
                    // esquina arriba izquierda
                    JPanel panel = new JPanel();
                    panel.setName(fila + "-" + columna);
//                    panel.setBackground(Color.LIGHT_GRAY);
//                    panel.setBorder(BorderFactory.createLineBorder(Color.black, 1));
                    jpn_suTablero.add(panel);
                } else if (fila == 0 && columna > 0) {
                    //Linea de arriba (horizontal)
                    JLabel label = new JLabel(obtenerLetraHorizontal(columna));
                    label.setHorizontalAlignment(0);
                    label.setFont(new Font("fuente", 0, 35));
                    jpn_suTablero.add(label);
                } else if (fila > 0 && columna == 0) {
                    // linea vertical
                    JLabel label = new JLabel(obtenerNumeroVertial(fila));
                    label.setHorizontalAlignment(0);
                    label.setFont(new Font("fuente", 0, 35));
                    jpn_suTablero.add(label);
                } else {
                    JPanel panel = new JPanel();
                    panel.setName(fila + "-" + columna);
                    panel.setBackground(Color.LIGHT_GRAY);
                    panel.setBorder(BorderFactory.createLineBorder(Color.black, 1));
                    panel.addMouseListener(new MouseListener() {
                        @Override
                        public void mouseClicked(MouseEvent e) {
                            Component comp = e.getComponent();
                            if (comp instanceof JPanel) {
                                JPanel panelPulsado = (JPanel) comp;
                                panelPulsado.setBackground(Color.darkGray);
                                String nombreComp = panelPulsado.getName();
                                String[] partes = nombreComp.split("-");
                                int fila = Integer.parseInt(partes[0]);
                                int columna = Integer.parseInt(partes[1]);
                                System.out.println("Click en mi tablero en Fila " + fila + " columna " + columna);
//                            jpn_miTablero.get
//                            jpn_miTablero.remove(comp);

                            }
                        }

                        @Override
                        public void mousePressed(MouseEvent e) {
//                        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
                        }

                        @Override
                        public void mouseReleased(MouseEvent e) {
//                        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
                        }

                        @Override
                        public void mouseEntered(MouseEvent e) {
//                        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
                        }

                        @Override
                        public void mouseExited(MouseEvent e) {
//                        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
                        }
                    });
                    jpn_suTablero.add(panel);
                }

            }
//        gridLayout.
            jpn_suTablero.revalidate();
            jpn_suTablero.repaint();
        }
        jpn_suTablero.repaint();
    }

    private String obtenerLetraHorizontal(int columna) {
        String letra = "";
        switch (columna) {
            case 1:
                letra = "A";
                break;
            case 2:
                letra = "B";
                break;
            case 3:
                letra = "C";
                break;
            case 4:
                letra = "D";
                break;
            case 5:
                letra = "E";
                break;
            case 6:
                letra = "F";
                break;
            case 7:
                letra = "G";
                break;
            case 8:
                letra = "H";
                break;
            case 9:
                letra = "I";
                break;
        }
        return letra;
    }
    private String obtenerNumeroVertial(int fila) {
        String numero = "";
        switch (fila) {
            case 1:
                numero = "1";
                break;
            case 2:
                numero = "2";
                break;
            case 3:
                numero = "3";
                break;
            case 4:
                numero = "4";
                break;
            case 5:
                numero = "5";
                break;
            case 6:
                numero = "6";
                break;
            case 7:
                numero = "7";
                break;
            case 8:
                numero = "8";
                break;
            case 9:
                numero = "9";
                break;
        }
        return numero;
    }
}
